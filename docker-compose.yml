version: '3'

services:
  online-order-food:
    container_name: online-order-food
    build:
      context: .
    ports:
      - "8888:8888"
    volumes:
      - ./logs:/usr/local/logs/
    depends_on:
      mysql:
        # java容器在mysql容器状态为健康前不会启动，需要注意的是：condition: service_healthy，在V3版本的Compose中已废弃
        condition: service_healthy

  mysql:
    image: mysql
    container_name: mysql
    # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
    # (this is just an example, not intended to be a production configuration)
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: order
      TZ: Asia/Shanghai
    ports:
      - '3306:3306'
    # 增加healthcheck参数：执行'mysqladmin ping -h localhost'命令
    # 执行时间设定为10秒，超时时常设定为20秒，重试次数为10次，如果能ping通，说明数据库启动完成
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 10s
      timeout: 20s
      retries: 10

  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    depends_on: [ zookeeper ]
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_CREATE_TOPICS: "order-coupon:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/logs
    ports:
      - "9092:9092"
